# 1.编程关键词与函数
"""
print(): 函数, 可以打印, 输出一句话
type(): 带括号的是函数, 查看数据的数据类型
 = : 赋值符号, 给变量赋值
id() :函数, 查看变量的内存地址
== : 判断左右两边是否相等
str(): 函数, 将数据转换成字符串
int(): 函数, 将数据转化为整型
float(): 函数,将数据转化为float型
bool(): 函数, 可以将其他数据转化为布尔值
\n : 转义字符,换行
\ : 会将后边的字母或数字一起转义, 赋予其他意义
\t: 制表符, 相当于一个tab键
\\: 表示 \, 使用 \ 取消 \ 转义效果
len(): 计算字符串长度
字符串前添加r也可以让字符串中的转义字符不再转义
input(): 输入函数, 接收来自键盘输入的内容, 数据类型是字符串
open(): 打开一个文件, 第一个参数是文件名字, 第二参数是操作文件方式
%s: 占位符, 可以拼接字符串型数据
%d: 可以拼接整型数据, 拼接数字类型数据可以, 字符串不行
%f: 可以拼接浮点型数据, 默认保留小数点后6位, 不够六位, 补0
使用+拼接字符串
format(): 函数拼接字符串, 在拼接的位置写 {}
算术运算符: +加 -减 *乘 /除 ** 幂 // 整除 % 求余
关系运算符(比较运算符): == 比较左右两边相等, 数值上的相等
    > 大于    < 小于    <= 小于等于     >= 大于等于     != 不等于
逻辑运算符: and 逻辑与, or 逻辑或, not 逻辑非
赋值运算符: = 赋值符号
    +=, -=, *=, /=, %=, //=, **=
成员符号: in 在里面, not in 不在里面
身份运算符: is 是    is not  不是
range()：函数从默认0开始, 最大数取不到，函数是一个左闭右开区间, 左边取的到, 右边取不到
"""
# 2.
"""
单分支判断语句:
if 表达式:     
    代码块
     
  双分支判断语句:
if 表达式:
    代码块1
else:         
    代码块2 
    
多分支结构是:  
if 表达式1:
    代码块1
elif 表达式2:
    代码块2
elif 表达式3:
    代码块3
....
else:
    代码块   
"""
# 3. 写出for循环与while循环的程序结构
"""
循环语句: 重复做同一件事情
for 变量 in 数据范围:      -- 每次循环将 数据从范围内取出赋值给变量
    循环体                -- 循环体执行的次数取决于数据范围, 需要循环的次数

for 循环比较注重循环的范围，循环的次数
while 循环比较注重循环的条件
while 表达式： ---当表达式成立，开始循环，循环体执行，不成立循环结束循环体
"""
# 4.程序设计
# 1). 通过判断学号确定, 当输入一个学号时是不是本班级的学生
stuid = int(input("请输入学号："))
if 2022001 <= stuid <= 2022040:
    print("ai2班学生")
else:
    print("不是ai2班学生")
# 2). 通过拼接字符串, 循环打印出本班级所有的学号
for stuid in range(2022001, 2022040):
    print(f"{stuid} 是本班学生")
# 3). 口令验证, 键盘输入一个四位的口令, 进入while循环,当口令与已知口令7788一致结束循环,
# 一共四次机会, 并且判断每次输入的字符串长度是否是四位, 不是四位给出提示
a = 7788
b = 1
while b < 5:
    a = str(7788)
    c = str(input("请输入:"))
    if len(c) == len(a):
        print("输入错误:")
        c = str(input("请重新输入:"))
        if int(c) == int(a):
            print("输入正确")
            break
        elif int(c) != int(a):
            print("输入错误")
    else:
        print("输入位数错误")
    b += 1


